version: '3.8'

services:
  # 测试数据库
  postgres-test:
    image: postgres:16-alpine
    container_name: inventory-postgres-test
    environment:
      POSTGRES_DB: inventory_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # 后端测试
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inventory-backend-test
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-test:5432/inventory_test
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SPRING_FLYWAY_ENABLED: false
      JWT_SECRET: test-secret-key-should-be-long-enough-1234567890
      JWT_EXPIRATION: 3600
    ports:
      - "8081:8080"
    depends_on:
      postgres-test:
        condition: service_healthy
    command: ["./gradlew", "test"]
    networks:
      - test-network

  # 前端测试
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: inventory-frontend-test
    ports:
      - "3000:80"
    depends_on:
      backend-test:
        condition: service_completed_successfully
    networks:
      - test-network

  # E2E测试
  e2e-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    container_name: inventory-e2e-test
    environment:
      BASE_URL: http://frontend-test:80
      API_URL: http://backend-test:8080
    depends_on:
      - frontend-test
      - backend-test
    command: ["npm", "run", "test:e2e"]
    networks:
      - test-network

networks:
  test-network:
    driver: bridge
